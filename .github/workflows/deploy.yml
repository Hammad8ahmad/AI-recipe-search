name: Deploy to DigitalOcean

on:
  push:
    branches:
      - master
    paths:
      - 'server/**'
      - 'docker-compose.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“¥ Checkout repository
        uses: actions/checkout@v4

      - name: ðŸ”’ Set up SSH key and known_hosts
        run: |
          mkdir -p ~/.ssh

          # Write the private key from GitHub Secrets to a file
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/github-actions-deploy
          chmod 600 ~/.ssh/github-actions-deploy

          # Add droplet IP to known_hosts to avoid prompt
          ssh-keyscan -H ${{ secrets.DROPLET_IP }} >> ~/.ssh/known_hosts

      - name: Check if secret is empty
        run: |
          echo "Checking SSH_PRIVATE_KEY length..."
          echo "Length: ${#SSH_PRIVATE_KEY} characters"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: ðŸš€ Deploy to Droplet
        run: |
          echo "Running remote deployment commands..."
          ssh -i ~/.ssh/github-actions-deploy -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
            set -e
            echo "âœ… Logged into droplet"

            # Navigate to project directory
            cd ~/AI-recipe-search/server

            # Pull latest changes
            git reset --hard origin/master
            git pull origin master

            # Clean up client (if needed)
            rm -rf ~/AI-recipe-search/client

            # Stop and clean existing containers
            docker compose down --remove-orphans || true
            docker rm -f recipe_db recipe_server || true

            # Optional cleanup
            docker system prune -f

            # Rebuild and restart
            docker compose build --no-cache
            docker compose up -d

            echo "âœ… Deployment complete"
          EOF
